// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Anime {
  id Int @id @unique
  title String
  title_english String?
  title_romanji String?
  title_french String?
  others String?
  type String
  status String
  popularity Float
  url String
  genres String[]
  url_image String
  score String
  start_date_year String
  nb_eps Int?

  synopsis String?
  cover_url String?

  episodes Episode[]
  latest Latest[]
}

model Episode {
  id Int @id @default(autoincrement())

  time String
  episode String 
  num Int
  url String @unique
  url_image String

  anime Anime @relation(fields: [anime_id], references: [id])
  anime_id Int

  history AnimeHistory[]
}

model Latest {
  id Int @id @default(autoincrement())
  timestamp DateTime @default(now())
  episode String
  lang String
  anime_url String @unique

  anime_id Int
  anime Anime @relation(fields: [anime_id], references: [id])
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String? @db.Text
  username String @unique
  discord_id String? @unique
  firebase_id String? @unique
  avatar_url String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  history AnimeHistory[]
}

model AnimeHistory {
  id Int @id @default(autoincrement())
  timestamp Int
  duration Int
  episode Episode @relation(fields: [episode_id], references: [id])
  episode_id Int
  user User @relation(fields: [user_id], references: [id])
  user_id Int
}